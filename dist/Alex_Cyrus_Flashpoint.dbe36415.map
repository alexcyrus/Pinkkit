{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","fetch","then","res","json","data","children","map","catch","console","log","err","topics","autocomplete","inp","arr","currentFocus","addEventListener","e","a","b","i","val","value","closeAllLists","document","createElement","setAttribute","id","parentNode","appendChild","length","substr","toUpperCase","innerHTML","getElementsByTagName","x","getElementById","keyCode","addActive","preventDefault","click","removeActive","classList","add","remove","elmnt","getElementsByClassName","removeChild","target","searchForm","searchBtn","searchInput","showMessage","reddit","output","results","forEach","image","post","preview","images","source","url","title","truncateString","selftext","subreddit","score","message","className","div","createTextNode","searchContainer","insertBefore","setTimeout","querySelector","myString","limit","shortened","indexOf","substring"],"mappings":"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","file":"Alex_Cyrus_Flashpoint.dbe36415.map","sourceRoot":"..","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit) {\n    return fetch(\n      `http://www.reddit.com/search.json?q=${searchTerm}&sort=top&limit=${searchLimit}`\n    )\n      .then(res => res.json())\n      .then(data => {\n        return data.data.children.map(data => data.data);\n      })\n      .catch(err => console.log(err));\n  }\n};","import reddit from './redditapi';\n\n// Autocomplete\nvar topics = [\"Architecture\", \"Art\", \"Business\", \"Education\", \"Entertainment\", \"Gaming\", \"General\", \"Hobbies and Interests\", \"Law\", \"Lifestyle\", \"Locations\", \"Meta\", \"Music\", \"News and Politics\", \"Science\", \"Social Science and Humanities\", \"Sports\", \"Technology\", \"Travel\", \"Other\"];\n\nfunction autocomplete(inp, arr) {\n  /*the autocomplete function takes two arguments,\n  the text field element and an array of possible autocompleted values:*/\n  var currentFocus;\n  /*execute a function when someone writes in the text field:*/\n  inp.addEventListener(\"input\", function(e) {\n    var a, b, i, val = this.value;\n    /*close any already open lists of autocompleted values*/\n    closeAllLists();\n    if (!val) { return false;}\n    currentFocus = -1;\n    /*create a DIV element that will contain the items (values):*/\n    a = document.createElement(\"DIV\");\n    a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n    a.setAttribute(\"class\", \"autocomplete-items\");\n    /*append the DIV element as a child of the autocomplete container:*/\n    this.parentNode.appendChild(a);\n    /*for each item in the array...*/\n    for (i = 0; i < arr.length; i++) {\n      /*check if the item starts with the same letters as the text field value:*/\n      if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n        /*create a DIV element for each matching element:*/\n        b = document.createElement(\"DIV\");\n        /*make the matching letters bold:*/\n        b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\n        b.innerHTML += arr[i].substr(val.length);\n        /*insert a input field that will hold the current array item's value:*/\n        b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n        /*execute a function when someone clicks on the item value (DIV element):*/\n        b.addEventListener(\"click\", function(e) {\n          /*insert the value for the autocomplete text field:*/\n          inp.value = this.getElementsByTagName(\"input\")[0].value;\n          /*close the list of autocompleted values,\n          (or any other open lists of autocompleted values:*/\n          closeAllLists();\n        });\n        a.appendChild(b);\n      }\n    }\n  });\n  /*execute a function presses a key on the keyboard:*/\n  inp.addEventListener(\"keydown\", function(e) {\n      var x = document.getElementById(this.id + \"autocomplete-list\");\n      if (x) x = x.getElementsByTagName(\"div\");\n      if (e.keyCode == 40) {\n        /*If the arrow DOWN key is pressed,\n        increase the currentFocus variable:*/\n        currentFocus++;\n        /*and and make the current item more visible:*/\n        addActive(x);\n      } else if (e.keyCode == 38) { //up\n        /*If the arrow UP key is pressed,\n        decrease the currentFocus variable:*/\n        currentFocus--;\n        /*and and make the current item more visible:*/\n        addActive(x);\n      } else if (e.keyCode == 13) {\n        /*If the ENTER key is pressed, prevent the form from being submitted,*/\n        e.preventDefault();\n        if (currentFocus > -1) {\n          /*and simulate a click on the \"active\" item:*/\n          if (x) x[currentFocus].click();\n        }\n      }\n  });\n  function addActive(x) {\n    /*a function to classify an item as \"active\":*/\n    if (!x) return false;\n    /*start by removing the \"active\" class on all items:*/\n    removeActive(x);\n    if (currentFocus >= x.length) currentFocus = 0;\n    if (currentFocus < 0) currentFocus = (x.length - 1);\n    /*add class \"autocomplete-active\":*/\n    x[currentFocus].classList.add(\"autocomplete-active\");\n  }\n  function removeActive(x) {\n    /*a function to remove the \"active\" class from all autocomplete items:*/\n    for (var i = 0; i < x.length; i++) {\n      x[i].classList.remove(\"autocomplete-active\");\n    }\n  }\n  function closeAllLists(elmnt) {\n    /*close all autocomplete lists in the document,\n    except the one passed as an argument:*/\n    var x = document.getElementsByClassName(\"autocomplete-items\");\n    for (var i = 0; i < x.length; i++) {\n      if (elmnt != x[i] && elmnt != inp) {\n      x[i].parentNode.removeChild(x[i]);\n    }\n  }\n}\n/*execute a function when someone clicks in the document:*/\ndocument.addEventListener(\"click\", function (e) {\n    closeAllLists(e.target);\n});\n}\n/*initiate the autocomplete function on the \"search-input\" element, and pass along the topics array as possible autocomplete values:*/\nautocomplete(document.getElementById(\"search-input\"), topics);\n\n// Search form\nvar searchForm = document.getElementById('search-form');\nvar searchBtn = document.getElementById('search-btn');\nvar searchInput = document.getElementById('search-input');\n\nsearchForm.addEventListener('submit', e => {\n  // Get limit\n  var searchLimit = document.getElementById('limit').value;\n  // Get search\n  var searchTerm = searchInput.value;\n  // Check for input\n  if (searchTerm == '') {\n    // Show message\n    showMessage('Please add a search term', 'alert-danger');\n  }\n  // Clear field\n  searchInput.value = '';\n\n  // Search Reddit\n  reddit.search(searchTerm, searchLimit).then(results => {\n    var output = '<div class=\"card-columns\">';\n    console.log(results);\n    results.forEach(post => {\n      // Check for image\n      var image = post.preview\n        ? post.preview.images[0].source.url\n        : 'https://www.iconsdb.com/icons/preview/deep-pink/reddit-xxl.png';\n      output += `\n      <div class=\"card mb-2\">\n      <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">${post.title}</h5>\n        <p class=\"card-text\">${truncateString(post.selftext, 100)}</p>\n        <a href=\"${post.url}\" target=\"_blank\n        \" class=\"btn btn-primary\">Read More</a>\n        <hr>\n        <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span> \n        <span class=\"badge badge-dark\">Score: ${post.score}</span>\n      </div>\n    </div>\n      `;\n    });\n    output += '</div>';\n    document.getElementById('results').innerHTML = output;\n  });\n\n  e.preventDefault();\n});\n\n// Show Message Function\nfunction showMessage(message, className) {\n  // Create div\n  var div = document.createElement('div');\n  // Add classes\n  div.className = `alert ${className}`;\n  // Add text\n  div.appendChild(document.createTextNode(message));\n  // Get parent\n  var searchContainer = document.getElementById('search-container');\n  // Get form\n  var search = document.getElementById('search');\n\n  // Insert alert\n  searchContainer.insertBefore(div, search);\n\n  // Timeout after 3 sec\n  setTimeout(function() {\n    document.querySelector('.alert').remove();\n  }, 3000);\n}\n\n// Truncate String Function\nfunction truncateString(myString, limit) {\n  var shortened = myString.indexOf(' ', limit);\n  if (shortened == -1) return myString;\n  return myString.substring(0, shortened);\n}"]}